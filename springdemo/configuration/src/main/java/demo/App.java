/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.context.properties.EnableConfigurationProperties;

import java.util.Arrays;
import java.util.Properties;

@SpringBootApplication
@Slf4j
@EnableConfigurationProperties({AppMeta.class})
public class App implements CommandLineRunner {

    @Value("${cl.name:undefined}")
    private String commandLineName;

    @Value("${scp:null}")
    private String servletContextParam;

    @Value("${spring.application.name:null}")
    private String name;

    @Autowired
    private AppMeta appMeta;

    public static void main(String[] args) {
        //提前定义，但是Test无法执行该段代码
        SpringApplication application = new SpringApplication(App.class);
        Properties properties = new Properties();
        properties.setProperty("spring.config.location", "file:D:/IDEA/java/springdemo/configuration/app-config/");
        application.setDefaultProperties(properties);
        application.run(args);
    }

    @Override
    public void run(String... args) throws Exception {
        log.info("Command line arguments: {}", Arrays.toString(args));
        log.info("commandLineName: {}", commandLineName);
        log.info("servletContextParam: {}", servletContextParam);
        log.info("applicationName: {}", name);
        log.info("System: {}", System.getProperty("user.dir"));
        log.info(appMeta.toString());
    }
}
